

import com.smartarch.common.model.req.DelReq;
import com.smartarch.common.model.req.@value2@AddReq;
import com.smartarch.common.model.req.@value2@DelReq;
import com.smartarch.common.model.req.@value2@UpdateReq;
import com.smartarch.common.model.vo.@value2@Vo;
import com.smartarch.common.service.@value2@Service;
import com.smartarch.platform.api.IConst;
import com.smartarch.platform.api.IUtil;
import com.smartarch.platform.locale.LocaleMessage;
import com.smartarch.platform.log.bean.LogMessage;
import com.smartarch.platform.log.service.LogService;
import com.smartarch.platform.model.ResponseData;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import java.util.Date;
import java.util.List;
import java.util.UUID;




@Slf4j
@Api(tags = "@value3@管理接口")
@RestController
@RequestMapping("/@value1@}")
public class @value2@Controller {


    @Autowired(required = false)
    private @value2@Service @value1@Service;

    @Resource
    private LocaleMessage localeMessage;

    @ApiOperation(value = "增加@value3@")
    @ResponseStatus(HttpStatus.CREATED)
    @PostMapping("/add")
    public void add@value2@( @RequestBody @value2@AddReq @value1@AddReq) {

        @value1@Service.add@value2@(@value1@AddReq);

        LogMessage logMessage = new LogMessage(UUID.randomUUID().toString(), IConst.LOG_TYPE_OPER,
                localeMessage.getMessage("@value2@Controller"), localeMessage.getMessage("@value1@.create"),
                IConst.LOG_RANK_NOTICE, "@value1@", new Date(), "create @value1@");
        LogService.getInstance().recordOperLog(logMessage);
    }

    @ApiOperation(value = "更新@value3@")
    @ResponseStatus(HttpStatus.CREATED)
    @PostMapping("/update")
    public void update@value2@( @RequestBody @value2@UpdateReq @value1@UpdateReq) {

        @value1@Service.update@value2@(@value1@UpdateReq);

        LogMessage logMessage = new LogMessage(UUID.randomUUID().toString(), IConst.LOG_TYPE_OPER,
                localeMessage.getMessage("@value2@Controller"), localeMessage.getMessage("@value1@.update"),
                IConst.LOG_RANK_NOTICE, "@value1@", new Date(), "update @value1@");
        LogService.getInstance().recordOperLog(logMessage);
    }

    @ApiOperation(value = "删除@value3@")
    @ResponseStatus(HttpStatus.CREATED)
    @PostMapping("/del")
    public void del@value2@( @RequestBody DelReq delReq) {

        @value1@Service.del@value2@(delReq);

        LogMessage logMessage = new LogMessage(UUID.randomUUID().toString(), IConst.LOG_TYPE_OPER,
                localeMessage.getMessage("@value2@Controller"), localeMessage.getMessage("@value1@.del"),
                IConst.LOG_RANK_NOTICE, "@value1@", new Date(), "del @value1@");
        LogService.getInstance().recordOperLog(logMessage);
    }

    @ApiOperation(value = "查询@value3@列表")
    @GetMapping("/list")
    public ResponseData<List<@value2@Vo>> list() {
        return IUtil.getResponseData( @value1@Service.selectAll() ) ;
    }



}
